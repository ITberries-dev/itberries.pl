{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Client } from '../prismic';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, \"index.html\", console.log(props));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res, query, pathname, home, pageURL, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req, res = _ref.res, query = _ref.query, pathname = _ref.pathname;\n                _context.prev = 1;\n                _context.next = 4;\n                return Client(req).getSingle('homepage', {\n                  lang: query.language\n                });\n\n              case 4:\n                home = _context.sent;\n                pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n                if (home) {\n                  _context.next = 10;\n                  break;\n                }\n\n                res.statusCode = 404;\n                error = {\n                  statusCode: 404\n                };\n                return _context.abrupt(\"return\", {\n                  error: error\n                });\n\n              case 10:\n                return _context.abrupt(\"return\", {\n                  home: home,\n                  pageURL: pageURL\n                });\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                return _context.abrupt(\"return\", {\n                  error: true\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component); // const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n//         if (!home) {\n//             res.statusCode = 404;\n//             const error = {\n//                 statusCode: 404\n//             };\n//             return { error }\n//         }\n//         console.log(home)\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n// export default Index;\n\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/matthew/Documents/ITBERRIES/src/pages/index.tsx"],"names":["React","Client","console","log","props","req","res","query","pathname","getSingle","lang","language","home","pageURL","protocol","headers","host","url","window","location","origin","statusCode","error","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,YAAvB;;;;;;;;;;;;;;;6BA0BU;AACF,aACA,iCAEKC,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAFL,CADA;AAMN;;;;;;;;;;AA7B8BC,gBAAAA,G,QAAAA,G,EAAKC,G,QAAAA,G,EAAKC,K,QAAAA,K,EAAOC,Q,QAAAA,Q;;;uBAE3BP,MAAM,CAACI,GAAD,CAAN,CAAYI,SAAZ,CAAsB,UAAtB,EAAkC;AAAEC,kBAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd,iBAAlC,C;;;AAAbC,gBAAAA,I;AAEAC,gBAAAA,O,GAAUR,GAAG,GAAGA,GAAG,CAACS,QAAJ,GAAe,KAAf,GAAuBT,GAAG,CAACU,OAAJ,CAAYC,IAAnC,GAA0CX,GAAG,CAACY,GAAjD,GAAuDC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBZ,Q;;oBAE9FI,I;;;;;AACJN,gBAAAA,GAAG,CAACe,UAAJ,GAAiB,GAAjB;AAEMC,gBAAAA,K,GAAQ;AACbD,kBAAAA,UAAU,EAAE;AADC,iB;iDAIP;AAAEC,kBAAAA,KAAK,EAALA;AAAF,iB;;;iDAGD;AAAEV,kBAAAA,IAAI,EAAJA,IAAF;AAAQC,kBAAAA,OAAO,EAAPA;AAAR,iB;;;;;iDAEA;AAAES,kBAAAA,KAAK,EAAE;AAAT,iB;;;;;;;;;;;;;;;;;;;EApBmBtB,KAAK,CAACuB,S,GAkCnC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { IncomingMessage } from 'http';\nimport { Client } from '../prismic';\n\nexport default class extends React.Component<{ home: any, configuration: any, pageURL: string, error: any }> {\n\n\tstatic async getInitialProps({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string }) {\n\t\ttry {\n\t\t\tconst home = await Client(req).getSingle('homepage', { lang: query.language });\n\n\t\t\tconst pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n\t\t\tif (!home) {\n\t\t\t\tres.statusCode = 404;\n\n\t\t\t\tconst error = {\n\t\t\t\t\tstatusCode: 404\n\t\t\t\t};\n\n\t\t\t\treturn { error }\n\t\t\t}\n\n\t\t\treturn { home, pageURL };\n\t\t} catch (error) {\n\t\t\treturn { error: true };\n\t\t}\n\t}\n\n\trender() {\n        return (\n        <div>\n            index.html\n            {console.log(props)}\n        </div>\n        );\n\t}\n}\n\n// const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n//         if (!home) {\n//             res.statusCode = 404;\n\n//             const error = {\n//                 statusCode: 404\n//             };\n\n//             return { error }\n//         }\n\n//         console.log(home)\n\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n\n// export default Index;"]},"metadata":{},"sourceType":"module"}
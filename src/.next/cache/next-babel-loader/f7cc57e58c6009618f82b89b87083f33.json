{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", null, \"index.html\");\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var req, res, query, pathname;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req, res = _ref.res, query = _ref.query, pathname = _ref.pathname;\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index; // export default class extends React.Component<{ home: any, configuration: any, pageURL: string, error: any }> {\n// \tstatic async getInitialProps({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string }) {\n// \t\ttry {\n// \t\t\tconst home = await Client(req).getSingle('homepage', { lang: query.language });\n// \t\t\tconst pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n// \t\t\tif (!home) {\n// \t\t\t\tres.statusCode = 404;\n// \t\t\t\tconst error = {\n// \t\t\t\t\tstatusCode: 404\n// \t\t\t\t};\n// \t\t\t\treturn { error }\n// \t\t\t}\n// \t\t\treturn { home, pageURL };\n// \t\t} catch (error) {\n// \t\t\treturn { error: true };\n// \t\t}\n// \t}\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/matthew/Documents/ITBERRIES/src/pages/index.tsx"],"names":["React","Index","props","getInitialProps","req","res","query","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgB;AAC1B,SACI,gCADJ;AAKH,CAND;;KAAMD,K;;AAQNA,KAAK,CAACE,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT,EAAcC,GAAd,QAAcA,GAAd,EAAmBC,KAAnB,QAAmBA,KAAnB,EAA0BC,QAA1B,QAA0BA,QAA1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeN,KAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { IncomingMessage } from 'http';\n\nconst Index = (props: any) => {\n    return (\n        <div>\n            index.html\n        </div>\n    )\n};\n\nIndex.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n\n}\n\nexport default Index;\n\n// export default class extends React.Component<{ home: any, configuration: any, pageURL: string, error: any }> {\n\n// \tstatic async getInitialProps({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string }) {\n// \t\ttry {\n// \t\t\tconst home = await Client(req).getSingle('homepage', { lang: query.language });\n\n// \t\t\tconst pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n// \t\t\tif (!home) {\n// \t\t\t\tres.statusCode = 404;\n\n// \t\t\t\tconst error = {\n// \t\t\t\t\tstatusCode: 404\n// \t\t\t\t};\n\n// \t\t\t\treturn { error }\n// \t\t\t}\n\n// \t\t\treturn { home, pageURL };\n// \t\t} catch (error) {\n// \t\t\treturn { error: true };\n// \t\t}\n// \t}"]},"metadata":{},"sourceType":"module"}
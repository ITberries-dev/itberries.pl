{"ast":null,"code":"import PrismicLib from 'prismic-javascript';\nimport PrismicConfig from './prismic-configuration.json';\nimport RoutingConfig from './routing-configuration.json';\nexport var Client = function Client() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var options = {\n    req: req,\n    accessToken: PrismicConfig.accessToken\n  };\n  return Prismic.client(PrismicConfig.apiEndpoint, options);\n};\n_c = Client;\nexport var Prismic = PrismicLib;\nexport var linkResolver = function linkResolver(doc, context) {\n  var page = RoutingConfig[context ? \"\".concat(doc.type, \"/\").concat(context) : doc.type];\n\n  if (page) {\n    var pageRoute = page.languages[doc.lang];\n    var uid = doc.uid || '';\n    var segment = pageRoute.segment ? pageRoute.segment + '/' : '';\n    var suffix = pageRoute.suffix ? '/' + pageRoute.suffix : '';\n    return '/' + doc.lang + '/' + segment + uid + suffix;\n  } else {\n    return '/';\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["/Users/matthew/Documents/ITBERRIES/src/prismic.ts"],"names":["PrismicLib","PrismicConfig","RoutingConfig","Client","req","options","accessToken","Prismic","client","apiEndpoint","linkResolver","doc","context","page","type","pageRoute","languages","lang","uid","segment","suffix"],"mappings":"AAAA,OAAQA,UAAR,MAA0B,oBAA1B;AACA,OAAQC,aAAR,MAA6B,8BAA7B;AAGA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,OAAQ,IAAOC,MAAM,GAAI,SAAVA,MAAU,GAA0C;AAAA,MAAzCC,GAAyC,uEAAT,IAAS;AAC/D,MAAMC,OAAO,GAAG;AAClBD,IAAAA,GAAG,EAAEA,GADa;AAElBE,IAAAA,WAAW,EAAEL,aAAa,CAACK;AAFT,GAAhB;AAKH,SAAQC,OAAO,CAACC,MAAR,CAAeP,aAAa,CAACQ,WAA7B,EAA0CJ,OAA1C,CAAR;AACA,CAPO;KAAOF,M;AASf,OAAO,IAAMI,OAAO,GAAGP,UAAhB;AAEP,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAkEC,OAAlE,EAAwF;AAChH,MAAMC,IAAS,GAAGX,aAAa,CAACU,OAAO,aAAMD,GAAG,CAACG,IAAV,cAAkBF,OAAlB,IAA8BD,GAAG,CAACG,IAA1C,CAA/B;;AAEH,MAAID,IAAJ,EAAU;AACT,QAAIE,SAAS,GAAGF,IAAI,CAACG,SAAL,CAAeL,GAAG,CAACM,IAAnB,CAAhB;AACA,QAAIC,GAAG,GAAGP,GAAG,CAACO,GAAJ,IAAW,EAArB;AACA,QAAIC,OAAO,GAAGJ,SAAS,CAACI,OAAV,GAAoBJ,SAAS,CAACI,OAAV,GAAoB,GAAxC,GAA8C,EAA5D;AACA,QAAIC,MAAM,GAAGL,SAAS,CAACK,MAAV,GAAmB,MAAML,SAAS,CAACK,MAAnC,GAA4C,EAAzD;AAEA,WAAO,MAAMT,GAAG,CAACM,IAAV,GAAiB,GAAjB,GAAuBE,OAAvB,GAAiCD,GAAjC,GAAuCE,MAA9C;AACA,GAPD,MAOO;AACN,WAAO,GAAP;AACA;AACD,CAbM","sourcesContent":["import  PrismicLib  from  'prismic-javascript'\nimport  PrismicConfig  from  './prismic-configuration.json'\nimport { IncomingMessage } from 'http'\nimport { ContentDocumentType } from './ContentDocumentType';\nimport RoutingConfig from './routing-configuration.json';\n\nexport  const  Client  = (req : IncomingMessage | null =  null) => {\n    const options = {\n\t\treq: req,\n\t\taccessToken: PrismicConfig.accessToken\n    };\n    \n\treturn  Prismic.client(PrismicConfig.apiEndpoint, options)\n}\n\nexport const Prismic = PrismicLib;\n\nexport const linkResolver = (doc : { type : ContentDocumentType, uid: string, lang: string }, context? : string) => {\n    const page: any = RoutingConfig[context ? `${doc.type}/${context}` : doc.type];\n\n\tif (page) {\n\t\tlet pageRoute = page.languages[doc.lang];\n\t\tlet uid = doc.uid || '';\n\t\tlet segment = pageRoute.segment ? pageRoute.segment + '/' : '';\n\t\tlet suffix = pageRoute.suffix ? '/' + pageRoute.suffix : '';\n\n\t\treturn '/' + doc.lang + '/' + segment + uid + suffix;\n\t} else {\n\t\treturn '/';\n\t}\n}"]},"metadata":{},"sourceType":"module"}
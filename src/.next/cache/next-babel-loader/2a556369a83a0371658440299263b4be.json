{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Client } from '../prismic';\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderSlices\", slices => slices.map((slice, index) => {\n      let key = slice.slice_type + index;\n\n      switch (slice.slice_type) {\n        case 'content_teaser':\n          return __jsx(ContentTeaser, {\n            title: slice.primary.title,\n            intro: slice.primary.intro,\n            linkLabel: slice.primary.link_label,\n            linkUrl: slice.primary.link,\n            image: slice.primary.image,\n            key: key\n          });\n\n        case 'select_flokes_section':\n          return __jsx(FlokeSection, {\n            title: slice.primary.title,\n            link: linkResolver(slice.primary.text_block_link),\n            description: slice.primary.description,\n            linkLabel: slice.primary.link_label,\n            flokeList: slice.items.slice(0, 3),\n            key: key\n          });\n\n        case 'image':\n          return __jsx(ImageSection, {\n            image: slice.primary.image,\n            key: key\n          });\n\n        case 'content_reference':\n          return __jsx(ContentReference, {\n            title: slice.primary.title,\n            description: slice.primary.description,\n            elementsList: slice.items,\n            buttonLabel: slice.primary.button_label,\n            key: key\n          });\n\n        default:\n          return;\n      }\n    }));\n  }\n\n  static async getInitialProps({\n    req,\n    res,\n    query,\n    pathname\n  }) {\n    try {\n      const home = await Client(req).getSingle('homepage', {\n        lang: query.language\n      });\n      const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n      if (!home) {\n        res.statusCode = 404;\n        const error = {\n          statusCode: 404\n        };\n        return {\n          error\n        };\n      }\n\n      return {\n        home,\n        pageURL\n      };\n    } catch (error) {\n      return {\n        error: true\n      };\n    }\n  }\n\n  render() {\n    __jsx(\"div\", null, \"index.html\");\n  }\n\n} // const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n//         if (!home) {\n//             res.statusCode = 404;\n//             const error = {\n//                 statusCode: 404\n//             };\n//             return { error }\n//         }\n//         console.log(home)\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n// export default Index;","map":{"version":3,"sources":["/Users/matthew/Documents/ITBERRIES/src/pages/index.tsx"],"names":["React","Client","Component","slices","map","slice","index","key","slice_type","primary","title","intro","link_label","link","image","linkResolver","text_block_link","description","items","button_label","getInitialProps","req","res","query","pathname","home","getSingle","lang","language","pageURL","protocol","headers","host","url","window","location","origin","statusCode","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IncomingMessage } from 'http';\nimport { Client } from '../prismic';\n\nexport default class extends React.Component<{ home: any, configuration: any, pageURL: string, error: any }> {\n\n\tstatic async getInitialProps({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string }) {\n\t\ttry {\n\t\t\tconst home = await Client(req).getSingle('homepage', { lang: query.language });\n\n\t\t\tconst pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n\t\t\tif (!home) {\n\t\t\t\tres.statusCode = 404;\n\n\t\t\t\tconst error = {\n\t\t\t\t\tstatusCode: 404\n\t\t\t\t};\n\n\t\t\t\treturn { error }\n\t\t\t}\n\n\t\t\treturn { home, pageURL };\n\t\t} catch (error) {\n\t\t\treturn { error: true };\n\t\t}\n\t}\n\n\trenderSlices = (slices: Slice[]) =>\n\t\tslices.map((slice: any, index: number) => {\n\t\t\tlet key = slice.slice_type + index;\n\t\t\tswitch (slice.slice_type) {\n\t\t\t\tcase 'content_teaser':\n\t\t\t\t\treturn <ContentTeaser\n\t\t\t\t\t\ttitle={slice.primary.title}\n\t\t\t\t\t\tintro={slice.primary.intro}\n\t\t\t\t\t\tlinkLabel={slice.primary.link_label}\n\t\t\t\t\t\tlinkUrl={slice.primary.link}\n\t\t\t\t\t\timage={slice.primary.image}\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t/>;\n\t\t\t\tcase 'select_flokes_section':\n\t\t\t\t\treturn <FlokeSection\n\t\t\t\t\t\ttitle={slice.primary.title}\n\t\t\t\t\t\tlink={linkResolver(slice.primary.text_block_link)}\n\t\t\t\t\t\tdescription={slice.primary.description}\n\t\t\t\t\t\tlinkLabel={slice.primary.link_label}\n\t\t\t\t\t\tflokeList={slice.items.slice(0, 3)}\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t/>;\n\t\t\t\tcase 'image':\n\t\t\t\t\treturn <ImageSection\n\t\t\t\t\t\timage={slice.primary.image}\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t/>;\n\t\t\t\tcase 'content_reference':\n\t\t\t\t\treturn <ContentReference\n\t\t\t\t\t\ttitle={slice.primary.title}\n\t\t\t\t\t\tdescription={slice.primary.description}\n\t\t\t\t\t\telementsList={slice.items}\n\t\t\t\t\t\tbuttonLabel={slice.primary.button_label}\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t/>;\n\t\t\t\tdefault: return;\n\t\t\t}\n\t\t})\n\n\trender() {\n        <div>\n            index.html\n        </div>\n\t}\n}\n\n// const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n//         if (!home) {\n//             res.statusCode = 404;\n\n//             const error = {\n//                 statusCode: 404\n//             };\n\n//             return { error }\n//         }\n\n//         console.log(home)\n\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n\n// export default Index;"]},"metadata":{},"sourceType":"module"}
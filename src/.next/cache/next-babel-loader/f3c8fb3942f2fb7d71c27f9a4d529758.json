{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Client } from '../prismic';\nexport default class extends React.Component {\n  static async getInitialProps({\n    req,\n    res,\n    query,\n    pathname\n  }) {\n    try {\n      const home = await Client(req).getSingle('homepage', {\n        lang: query.language\n      });\n      const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n      if (!home) {\n        res.statusCode = 404;\n        const error = {\n          statusCode: 404\n        };\n        return {\n          error\n        };\n      }\n\n      return {\n        home,\n        pageURL\n      };\n    } catch (error) {\n      return {\n        error: true\n      };\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, \"index.html\", console.log(this.props));\n  }\n\n} // const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n//         if (!home) {\n//             res.statusCode = 404;\n//             const error = {\n//                 statusCode: 404\n//             };\n//             return { error }\n//         }\n//         console.log(home)\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n// export default Index;","map":{"version":3,"sources":["/Users/matthew/Documents/ITBERRIES/src/pages/index.tsx"],"names":["React","Client","Component","getInitialProps","req","res","query","pathname","home","getSingle","lang","language","pageURL","protocol","headers","host","url","window","location","origin","statusCode","error","render","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA8F;AAE5G,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAA7B,EAA8H;AAC7H,QAAI;AACH,YAAMC,IAAI,GAAG,MAAMP,MAAM,CAACG,GAAD,CAAN,CAAYK,SAAZ,CAAsB,UAAtB,EAAkC;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OAAlC,CAAnB;AAEA,YAAMC,OAAO,GAAGR,GAAG,GAAGA,GAAG,CAACS,QAAJ,GAAe,KAAf,GAAuBT,GAAG,CAACU,OAAJ,CAAYC,IAAnC,GAA0CX,GAAG,CAACY,GAAjD,GAAuDC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBZ,QAAnG;;AAEA,UAAI,CAACC,IAAL,EAAW;AACVH,QAAAA,GAAG,CAACe,UAAJ,GAAiB,GAAjB;AAEA,cAAMC,KAAK,GAAG;AACbD,UAAAA,UAAU,EAAE;AADC,SAAd;AAIA,eAAO;AAAEC,UAAAA;AAAF,SAAP;AACA;;AAED,aAAO;AAAEb,QAAAA,IAAF;AAAQI,QAAAA;AAAR,OAAP;AACA,KAhBD,CAgBE,OAAOS,KAAP,EAAc;AACf,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACF,WACA,iCAEKC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CAFL,CADA;AAMN;;AA/B2G,C,CAkC7G;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { IncomingMessage } from 'http';\nimport { Client } from '../prismic';\n\nexport default class extends React.Component<{ home: any, configuration: any, pageURL: string, error: any }> {\n\n\tstatic async getInitialProps({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string }) {\n\t\ttry {\n\t\t\tconst home = await Client(req).getSingle('homepage', { lang: query.language });\n\n\t\t\tconst pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n\t\t\tif (!home) {\n\t\t\t\tres.statusCode = 404;\n\n\t\t\t\tconst error = {\n\t\t\t\t\tstatusCode: 404\n\t\t\t\t};\n\n\t\t\t\treturn { error }\n\t\t\t}\n\n\t\t\treturn { home, pageURL };\n\t\t} catch (error) {\n\t\t\treturn { error: true };\n\t\t}\n\t}\n\n\trender() {\n        return (\n        <div>\n            index.html\n            {console.log(this.props)}\n        </div>\n        );\n\t}\n}\n\n// const Index = (props: any) => {\n//     return (\n//         <div>\n//             index.html\n//         </div>\n//     )\n// };\n\n// Index.getInitialProps = async ({ req, res, query, pathname }: { req: IncomingMessage, res: any, query: any, pathname: string })  => {\n//     console.log(\"ELO\")\n//     try {\n//         const home = await Client(req).getSingle('homepage', { lang: query.language });\n\n//         const pageURL = req ? req.protocol + '://' + req.headers.host + req.url : window.location.origin + pathname;\n\n//         if (!home) {\n//             res.statusCode = 404;\n\n//             const error = {\n//                 statusCode: 404\n//             };\n\n//             return { error }\n//         }\n\n//         console.log(home)\n\n//         return { home, pageURL };\n//     } catch (error) {\n//         return { error: true };\n//     }\n// }\n\n// export default Index;"]},"metadata":{},"sourceType":"module"}